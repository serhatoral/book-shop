version: "3"

services:
  #cache için redis kullanılıyor
  redis:
    image: redis:latest
    container_name: bookshop-redis
    ports:
      - "6379:6379"

#Log kayıtları için mongodb kullanılıyor
  mongodb:
    image: mongo:latest
    container_name: bookshop-mongodb
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:management
    container_name: bookshop-rabbitmq
    ports:
       # AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
    expose:
      - '5672'

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    container_name: bookshop-zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    container_name: bookshop-kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9095:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local